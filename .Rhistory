# Scatter plot for smoke and CVD
plot(mydata$smoke, mydata$cardio, main = "Smoking Status VS CVD", xlab = "Smoking Status", ylab = "Cardiovascular Disease")
library(readr)
data_sim <- read_csv("data_sim.csv")
View(data_sim)
# Import dataset
mydata <- read.csv("~/SiM/data_sim.csv")
View(mydata)
# Identify missing value
sum(is.na(mydata))
ncol(mydata)
nrow(mydata)
head(mydata)
colnames(mydata)
dim(mydata)
# Summary statistics
summary(mydata)
# Bar Chart
# Gender Distribution
gender <- table(mydata$gender)
barplot(gender, main="Gender Distribution", xlab="Gender (1: Female, 2: Male)", ylab="Frequency", col = rainbow(2))
# Cholesterol Distribution
cholesterol <- table(mydata$cholesterol)
barplot(cholesterol, main="Cholesterol Level Distribution", xlab="Cholesterol Level", ylab="Frequency", col = rainbow(3))
# Glucose Distribution
glucose <- table(mydata$gluc)
barplot(glucose, main="Glucose Level Distribution", xlab="Glucose Level", ylab="Frequency", col = rainbow(3))
# Smoking Distribution
smoking <- table(mydata$smoke)
barplot(smoking, main="Smoking Status Distribution", xlab="Smoking Status (0: Non-smoker, 1: Smoker)", ylab="Frequency", col = rainbow(2))
# Alcohol Distribution
alcohol <- table(mydata$alco)
barplot(alcohol, main="Alcohol Intake Distribution", xlab="Alcohol Intake (0: Does not consume, 1: Consumes)", ylab="Frequency", col = rainbow(2))
# Blood Pressure Category Distribution
bp_category <- table(mydata$bp_category)
barplot(bp_category, main="Blood Pressure Category Distribution", xlab="Blood Pressure Category", ylab="Frequency", col = rainbow(4))
# Active Distribution
active <- table(mydata$active)
barplot(active, main="Physical Activity Distribution", xlab="Physical activity (0: Not physically active, 1: Physically active)", ylab="Frequency", col = rainbow(2))
# CVD Distribution
CVD <- table(mydata$cardio)
barplot(CVD, main="Cardiovascular Disease Distribution", xlab="Cardiovascular Disease (0: Absence, 1: Presence)", ylab="Frequency", col = rainbow(2))
# Histogram
# Age Distribution
hist(mydata$age_years, main="Age distribution", xlab="Age", ylab="Frequency", col = "mediumpurple1")
# Height Distribution
hist(mydata$height, main="Height distribution", xlab="Height", ylab="Frequency", col = "rosybrown1")
# Weight Distribution
hist(mydata$weight, main="Weight distribution", xlab="Weight", ylab="Frequency", col = "skyblue")
# Boxplot
library(ggplot2)
# Boxplot for BMI vs Cardiovascular
ggplot(data = mydata, mapping = aes(x = cardio, y = bmi)) + geom_boxplot(mapping = aes(group = cut_width(cardio, 0.1)))
# Boxplot for ap_hi & ap_lo
ggplot(data = mydata, mapping = aes(x = ap_hi, y = ap_lo)) + geom_boxplot(mapping = aes(group = cut_width(cardio, 0.1)))
# Scatter plot
# Scatter plot for cholesterol and CVD
plot(mydata$cholesterol, mydata$cardio, main = "Cholesterol Level VS CVD", xlab = "Cholesterol Level", ylab = "Cardiovascular Disease")
cor(mydata$cholesterol, mydata$cardio)
# Scatter plot for glucose and CVD
plot(mydata$gluc, mydata$cardio, main = "Glucose Level VS CVD", xlab = "Glucose Level", ylab = "Cardiovascular Disease")
cor(mydata$gluc, mydata$cardio)
# Scatter plot for smoke and CVD
plot(mydata$smoke, mydata$cardio, main = "Smoking Status VS CVD", xlab = "Smoking Status", ylab = "Cardiovascular Disease")
cor(mydata$smoke, mydata$cardio)
# Scatter plot for alcohol and CVD
plot(mydata$alco, mydata$cardio, main = "Alcohol Intake VS CVD", xlab = "Alcohol Intake", ylab = "Cardiovascular Disease")
cor(mydata$alco, mydata$cardio)
# Scatter plot for Active and CVD
plot(mydata$active, mydata$cardio, main = "Physical Activity VS CVD", xlab = "Physical Activity", ylab = "Cardiovascular Disease")
cor(mydata$active, mydata$cardio)
# Scatter plot for BMI and CVD
plot(mydata$bmi, mydata$cardio, main = "BMI VS CVD", xlab = "BMI", ylab = "Cardiovascular Disease")
cor(mydata$bmi, mydata$cardio)
# heat map 1
data = as.matrix(mydata[1:15])
head(data)
install.packages("pheatmap")
library("pheatmap")
pheatmap(data, cluster_rows = FALSE, cluster_cols = FALSE)
library(readr)
data_sim <- read_csv("data_sim.csv")
View(data_sim)
# Import dataset
mydata <- read.csv("~/SiM/data_sim.csv")
View(mydata)
# Identify missing value
sum(is.na(mydata))
ncol(mydata)
nrow(mydata)
head(mydata)
colnames(mydata)
dim(mydata)
# Summary statistics
summary(mydata)
# Bar Chart
# Gender Distribution
gender <- table(mydata$gender)
barplot(gender, main="Gender Distribution", xlab="Gender (1: Female, 2: Male)", ylab="Frequency", col = rainbow(2))
# Cholesterol Distribution
cholesterol <- table(mydata$cholesterol)
barplot(cholesterol, main="Cholesterol Level Distribution", xlab="Cholesterol Level", ylab="Frequency", col = rainbow(3))
# Glucose Distribution
glucose <- table(mydata$gluc)
barplot(glucose, main="Glucose Level Distribution", xlab="Glucose Level", ylab="Frequency", col = rainbow(3))
# Smoking Distribution
smoking <- table(mydata$smoke)
barplot(smoking, main="Smoking Status Distribution", xlab="Smoking Status (0: Non-smoker, 1: Smoker)", ylab="Frequency", col = rainbow(2))
# Alcohol Distribution
alcohol <- table(mydata$alco)
barplot(alcohol, main="Alcohol Intake Distribution", xlab="Alcohol Intake (0: Does not consume, 1: Consumes)", ylab="Frequency", col = rainbow(2))
# Blood Pressure Category Distribution
bp_category <- table(mydata$bp_category)
barplot(bp_category, main="Blood Pressure Category Distribution", xlab="Blood Pressure Category", ylab="Frequency", col = rainbow(4))
# Active Distribution
active <- table(mydata$active)
barplot(active, main="Physical Activity Distribution", xlab="Physical activity (0: Not physically active, 1: Physically active)", ylab="Frequency", col = rainbow(2))
# CVD Distribution
CVD <- table(mydata$cardio)
barplot(CVD, main="Cardiovascular Disease Distribution", xlab="Cardiovascular Disease (0: Absence, 1: Presence)", ylab="Frequency", col = rainbow(2))
# Histogram
# Age Distribution
hist(mydata$age_years, main="Age distribution", xlab="Age", ylab="Frequency", col = "mediumpurple1")
# Height Distribution
hist(mydata$height, main="Height distribution", xlab="Height", ylab="Frequency", col = "rosybrown1")
# Weight Distribution
hist(mydata$weight, main="Weight distribution", xlab="Weight", ylab="Frequency", col = "skyblue")
# Scatter plot
# Scatter plot for cholesterol and CVD
plot(mydata$cholesterol, mydata$cardio, main = "Cholesterol Level VS CVD", xlab = "Cholesterol Level", ylab = "Cardiovascular Disease")
cor(mydata$cholesterol, mydata$cardio)
library(readr)
data_sim <- read_csv("data_sim.csv")
View(data_sim)
# Import dataset
mydata <- read.csv("~/SiM/data_sim.csv")
View(mydata)
# Identify missing value
sum(is.na(mydata))
ncol(mydata)
nrow(mydata)
head(mydata)
colnames(mydata)
dim(mydata)
# Summary statistics
summary(mydata)
# Bar Chart
# Gender Distribution
gender <- table(mydata$gender)
barplot(gender, main="Gender Distribution", xlab="Gender (1: Female, 2: Male)", ylab="Frequency", col = rainbow(2))
# CVD Distribution
CVD <- table(mydata$cardio)
barplot(CVD, main="Cardiovascular Disease Distribution", xlab="Cardiovascular Disease (0: Absence, 1: Presence)", ylab="Frequency", col = rainbow(2))
# Histogram
# Height Distribution
hist(mydata$height, main="Height distribution", xlab="Height", ylab="Frequency", col = "rosybrown1")
# Weight Distribution
hist(mydata$weight, main="Weight distribution", xlab="Weight", ylab="Frequency", col = "skyblue")
# Scatter plot
# Scatter plot for ap_hi and CVD
plot(mydata$ap_hi, mydata$cardio, main = "ap_hi VS CVD", xlab = "ap_hi", ylab = "Cardiovascular Disease")
cor(mydata$ap_hi, mydata$cardio)
# Scatter plot for ap_lo and CVD
plot(mydata$ap_lo, mydata$cardio, main = "ap_lo VS CVD", xlab = "ap_lo", ylab = "Cardiovascular Disease")
cor(mydata$ap_lo, mydata$cardio)
# Boxplot
library(ggplot2)
# BMI Distribution
boxplot(mydata$bmi, main = 'BMI Distribution')
# Age Distribution
boxplot(mydata$age_years, main = 'Age Distribution')
# heat map
install.packages("ggcorrplot")
library(ggcorrplot)
correlation_matrix <- cor(mydata[1:15])  # Exclude categorical data
ggcorrplot(correlation_matrix, lab = TRUE)
install.packages("pROC")
library(readr)
SiM_Data_Final <- read_csv("SiM_Data_Final.csv")
View(SiM_Data_Final)
# Import dataset
mydata <- read.csv("~/SiM/SiM_Data_Final.csv")
View(mydata)
# Identify missing value
sum(is.na(mydata))
ncol(mydata)
nrow(mydata)
head(mydata)
colnames(mydata)
dim(mydata)
# Summary statistics
summary(mydata)
# Bar Chart
# Gender Distribution
gender <- table(mydata$gender)
barplot(gender, main="Gender Distribution", xlab="Gender (1: Female, 2: Male)", ylab="Frequency", col = rainbow(2))
# CVD Distribution
CVD <- table(mydata$cardio)
barplot(CVD, main="Cardiovascular Disease Distribution", xlab="Cardiovascular Disease (0: Absence, 1: Presence)", ylab="Frequency", col = rainbow(2))
# Histogram
# Height Distribution
hist(mydata$height, main="Height distribution", xlab="Height", ylab="Frequency", col = "rosybrown1")
# Weight Distribution
hist(mydata$weight, main="Weight distribution", xlab="Weight", ylab="Frequency", col = "skyblue")
# Scatter plot
# Scatter plot for ap_hi and CVD
plot(mydata$ap_hi, mydata$cardio, main = "ap_hi VS CVD", xlab = "ap_hi", ylab = "Cardiovascular Disease")
cor(mydata$ap_hi, mydata$cardio)
# Scatter plot for ap_lo and CVD
plot(mydata$ap_lo, mydata$cardio, main = "ap_lo VS CVD", xlab = "ap_lo", ylab = "Cardiovascular Disease")
cor(mydata$ap_lo, mydata$cardio)
# Boxplot
library(ggplot2)
# BMI Distribution
boxplot(mydata$bmi, main = 'BMI Distribution')
# Age Distribution
boxplot(mydata$age, main = 'Age Distribution')
# heat map
install.packages("ggcorrplot")
library(ggcorrplot)
correlation_matrix <- cor(mydata[1:14])  # Exclude categorical data
ggcorrplot(correlation_matrix, lab = TRUE)
# Import dataset and check data structure
mydata <- read.csv("~/SiM/SiM_Data_Final.csv", header=TRUE)
str(data)
# Develop a binary logistic regression model using glm function
riskmodel<-glm(cardio~age+gender+height+weight+ap_hi+ap_lo+cholesterol+gluc+smoke+alco+active+bmi,
family=binomial,data=mydata)
summary(riskmodel)
# rerun model by including significant independent variables only
riskmodel<-glm(cardio~weight+ap_hi+cholesterol+smoke,
family=binomial,data=mydata)
summary(riskmodel)
# load library ggplot2
library(ggplot2)
# Plot Predicted data and data points
ggplot(mydata, aes(x=weight+ap_hi+cholesterol+smoke, y=cardio)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
# use  odds ratio to measure  association between independent and dependent variables
coef(riskmodel)
exp(coef(riskmodel))
exp(confint(riskmodel))
cbind(coef(riskmodel),odds_ratio=exp(coef(riskmodel)),exp(confint(riskmodel)))
# predict the probability (risk) of the final model using the fitted function
mydata$predrisk<-round(fitted(riskmodel),2)
head(mydata,n=10)
# measure the goodness of fit of the fitted model
classificationtable<-table(mydata$cardio,mydata$predrisk > 0.5)
classificationtable
# calculate sensitivity and specificity values in R
sensitivity<-(classificationtable[2,2]/(classificationtable[2,2]+classificationtable[2,1]))*100
sensitivity
specificity<-(classificationtable[1,1]/(classificationtable[1,1]+classificationtable[1,2]))*100
specificity
# ROC-curve using pROC library
logit_P = predict(riskmodel , newdata = mydata, type = 'response' )
library(pROC)
install.packages("tidyverse")
# Import dataset
mydata <- read.csv("~/SiM/SiM_Data_Final.csv")
View(mydata)
# Identify missing value
sum(is.na(mydata))
ncol(mydata)
nrow(mydata)
head(mydata)
colnames(mydata)
dim(mydata)
# Summary statistics
summary(mydata)
# Bar Chart
# Gender Distribution
gender <- table(mydata$gender)
barplot(gender, main="Gender Distribution", xlab="Gender (1: Female, 2: Male)", ylab="Frequency", col = rainbow(2))
# CVD Distribution
CVD <- table(mydata$cardio)
barplot(CVD, main="Cardiovascular Disease Distribution", xlab="Cardiovascular Disease (0: Absence, 1: Presence)", ylab="Frequency", col = rainbow(2))
# Histogram
# Height Distribution
hist(mydata$height, main="Height distribution", xlab="Height", ylab="Frequency", col = "rosybrown1")
# Weight Distribution
hist(mydata$weight, main="Weight distribution", xlab="Weight", ylab="Frequency", col = "skyblue")
# Scatter plot
# Scatter plot for ap_hi and CVD
plot(mydata$ap_hi, mydata$cardio, main = "ap_hi VS CVD", xlab = "ap_hi", ylab = "Cardiovascular Disease")
cor(mydata$ap_hi, mydata$cardio)
# Scatter plot for ap_lo and CVD
plot(mydata$ap_lo, mydata$cardio, main = "ap_lo VS CVD", xlab = "ap_lo", ylab = "Cardiovascular Disease")
cor(mydata$ap_lo, mydata$cardio)
# Boxplot
library(ggplot2)
# BMI Distribution
boxplot(mydata$bmi, main = 'BMI Distribution')
# Age Distribution
boxplot(mydata$age, main = 'Age Distribution')
# heat map
install.packages("ggcorrplot")
install.packages("ggcorrplot")
library(ggcorrplot)
correlation_matrix <- cor(mydata[1:14])  # Exclude categorical data
ggcorrplot(correlation_matrix, lab = TRUE)
# Check data structure
str(data)
# Develop a binary logistic regression model using glm function
riskmodel<-glm(cardio~age+gender+height+weight+ap_hi+ap_lo+cholesterol+gluc+smoke+alco+active+bmi,
family=binomial,data=mydata)
summary(riskmodel)
# rerun model by including significant independent variables only
riskmodel<-glm(cardio~weight+ap_hi+cholesterol+smoke,
family=binomial,data=mydata)
summary(riskmodel)
# load library ggplot2
library(ggplot2)
# Plot Predicted data and data points
ggplot(mydata, aes(x=weight+ap_hi+cholesterol+smoke, y=cardio)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
# use  odds ratio to measure  association between independent and dependent variables
coef(riskmodel)
exp(coef(riskmodel))
exp(confint(riskmodel))
cbind(coef(riskmodel),odds_ratio=exp(coef(riskmodel)),exp(confint(riskmodel)))
# predict the probability (risk) of the final model using the fitted function
mydata$predrisk<-round(fitted(riskmodel),2)
head(mydata,n=10)
# measure the goodness of fit of the fitted model
classificationtable<-table(mydata$cardio,mydata$predrisk > 0.5)
classificationtable
# calculate sensitivity and specificity values in R
sensitivity<-(classificationtable[2,2]/(classificationtable[2,2]+classificationtable[2,1]))*100
sensitivity
specificity<-(classificationtable[1,1]/(classificationtable[1,1]+classificationtable[1,2]))*100
specificity
# ROC-curve using pROC library
logit_P = predict(riskmodel , newdata = mydata, type = 'response' )
library(pROC)
roc_score=roc(mydata$cardio, logit_P) #AUC score
plot(roc_score ,main ="ROC curve -- Logistic Regression ")
# Check data structure
str(data)
# Develop a binary logistic regression model using glm function
riskmodel<-glm(cardio~age+gender+height+weight+ap_hi+ap_lo+cholesterol+gluc+smoke+alco+active+bmi,
family=binomial,data=mydata)
summary(riskmodel)
# rerun model by including significant independent variables only
riskmodel<-glm(cardio~weight+ap_hi+cholesterol+smoke,
family=binomial,data=mydata)
summary(riskmodel)
# load library ggplot2
library(ggplot2)
# Plot Predicted data and data points
ggplot(mydata, aes(x=weight+ap_hi+cholesterol+smoke, y=cardio)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
# use  odds ratio to measure  association between independent and dependent variables
coef(riskmodel)
exp(coef(riskmodel))
exp(confint(riskmodel))
cbind(coef(riskmodel),odds_ratio=exp(coef(riskmodel)),exp(confint(riskmodel)))
# predict the probability (risk) of the final model using the fitted function
mydata$predrisk<-round(fitted(riskmodel),2)
head(mydata,n=10)
# measure the goodness of fit of the fitted model
classificationtable<-table(mydata$cardio,mydata$predrisk > 0.5)
classificationtable
# calculate sensitivity and specificity values in R
sensitivity<-(classificationtable[2,2]/(classificationtable[2,2]+classificationtable[2,1]))*100
install.packages("tidyverse")
# Import dataset
mydata <- read.csv("C:/Users/Bao Yu/Downloads/SiM_Data_Final.csv")
library(readr)
SiM_Data_Final <- read_csv("SiM_Data_Final.csv")
View(SiM_Data_Final)
install.packages("tidyverse")
# Import dataset
mydata <- read.csv("~/SiM/SiM_Data_Final.csv")
View(mydata)
# Identify missing value
sum(is.na(mydata))
ncol(mydata)
nrow(mydata)
head(mydata)
colnames(mydata)
dim(mydata)
# Summary statistics
summary(mydata)
# Bar Chart
# Gender Distribution
gender <- table(mydata$gender)
barplot(gender, main="Gender Distribution", xlab="Gender (1: Female, 2: Male)", ylab="Frequency", col = rainbow(2))
# CVD Distribution
CVD <- table(mydata$cardio)
barplot(CVD, main="Cardiovascular Disease Distribution", xlab="Cardiovascular Disease (0: Absence, 1: Presence)", ylab="Frequency", col = rainbow(2))
# Histogram
# Height Distribution
hist(mydata$height, main="Height distribution", xlab="Height", ylab="Frequency", col = "rosybrown1")
# Weight Distribution
hist(mydata$weight, main="Weight distribution", xlab="Weight", ylab="Frequency", col = "skyblue")
# Scatter plot
# Scatter plot for ap_hi and CVD
plot(mydata$ap_hi, mydata$cardio, main = "ap_hi VS CVD", xlab = "ap_hi", ylab = "Cardiovascular Disease")
cor(mydata$ap_hi, mydata$cardio)
# Scatter plot for ap_lo and CVD
plot(mydata$ap_lo, mydata$cardio, main = "ap_lo VS CVD", xlab = "ap_lo", ylab = "Cardiovascular Disease")
cor(mydata$ap_lo, mydata$cardio)
# Boxplot
library(ggplot2)
# BMI Distribution
boxplot(mydata$bmi, main = 'BMI Distribution')
# Age Distribution
boxplot(mydata$age, main = 'Age Distribution')
# heat map
install.packages("ggcorrplot")
library(ggcorrplot)
correlation_matrix <- cor(mydata[1:14])  # Exclude categorical data
ggcorrplot(correlation_matrix, lab = TRUE)
# Statistical Analysis
# Check data structure
str(data)
# Develop a binary logistic regression model using glm function
riskmodel<-glm(cardio~age+gender+height+weight+ap_hi+ap_lo+cholesterol+gluc+smoke+alco+active+bmi,
family=binomial,data=mydata)
summary(riskmodel)
# rerun model by including significant independent variables only
riskmodel<-glm(cardio~weight+ap_hi+cholesterol+smoke,
family=binomial,data=mydata)
summary(riskmodel)
